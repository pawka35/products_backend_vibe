import requests
import json

BASE_URL = "http://localhost:8000"

def test_role_management():
    """–¢–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
    
    print("–¢–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏ FastAPI")
    print("=" * 50)
    
    # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    admin_login = {
        "username": "admin",
        "password": "admin123"
    }
    
    response = requests.post(f"{BASE_URL}/auth/token", data=admin_login)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∞: {response.text}")
        return
    
    admin_token = response.json()["access_token"]
    admin_headers = {"Authorization": f"Bearer {admin_token}"}
    print("   –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω")
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–æ–ª–µ–π
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–æ–ª–µ–π...")
    response = requests.get(f"{BASE_URL}/admin/roles", headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π: {response.text}")
        return
    
    roles = response.json()
    print(f"   –ù–∞–π–¥–µ–Ω–æ —Ä–æ–ª–µ–π: {len(roles)}")
    for role in roles:
        print(f"     - {role['name']}: {role['description']} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {role['users_count']})")
    
    # 3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ–ª–∏
    print("\n3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ–ª–∏...")
    new_role_data = {
        "name": "moderator",
        "description": "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã",
        "permissions": "read,write,moderate"
    }
    
    response = requests.post(f"{BASE_URL}/admin/roles", json=new_role_data, headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏: {response.text}")
        return
    
    new_role = response.json()
    print(f"   –†–æ–ª—å —Å–æ–∑–¥–∞–Ω–∞: {new_role['name']} (ID: {new_role['id']})")
    
    # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏
    print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏...")
    response = requests.get(f"{BASE_URL}/admin/roles/{new_role['id']}", headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–∏: {response.text}")
        return
    
    role_info = response.json()
    print(f"   –†–æ–ª—å: {role_info['name']}")
    print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {role_info['description']}")
    print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–∏—è: {role_info['permissions']}")
    
    # 5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏
    print("\n5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏...")
    update_data = {
        "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",
        "permissions": "read,write,moderate,delete"
    }
    
    response = requests.put(f"{BASE_URL}/admin/roles/{new_role['id']}", json=update_data, headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ–ª–∏: {response.text}")
        return
    
    updated_role = response.json()
    print(f"   –†–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {updated_role['description']}")
    
    # 6. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏
    print("\n6. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user_data = {
        "username": "testmoderator",
        "email": "moderator@test.com",
        "password": "moderator123",
        "role": "customer"
    }
    
    response = requests.post(f"{BASE_URL}/auth/register", json=user_data)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.text}")
        return
    
    test_user = response.json()
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {test_user['username']} (ID: {test_user['id']})")
    
    # 7. –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    print("\n7. –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é...")
    assignment_data = {
        "user_id": test_user['id'],
        "role_id": new_role['id']
    }
    
    response = requests.post(f"{BASE_URL}/admin/roles/users/assign", json=assignment_data, headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏: {response.text}")
        return
    
    assignment = response.json()
    print(f"   –†–æ–ª—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_user['username']} –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å {new_role['name']}")
    
    # 8. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n8. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    response = requests.get(f"{BASE_URL}/admin/roles/users/{test_user['id']}", headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.text}")
        return
    
    user_roles = response.json()
    print(f"   –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user['username']}:")
    for role in user_roles:
        print(f"     - {role['name']}: {role['description']}")
    
    # 9. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª–∏
    print("\n9. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª–∏...")
    response = requests.get(f"{BASE_URL}/admin/roles/{new_role['id']}/users", headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª–∏: {response.text}")
        return
    
    users_with_role = response.json()
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–æ–ª—å—é {new_role['name']}:")
    for user in users_with_role:
        print(f"     - {user['username']} ({user['email']})")
    
    # 10. –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏
    print("\n10. –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏...")
    response = requests.delete(f"{BASE_URL}/admin/roles/users/{assignment['id']}", headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏: {response.text}")
        return
    
    print(f"   –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ —É–¥–∞–ª–µ–Ω–æ")
    
    # 11. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ä–æ–ª—å —É–¥–∞–ª–µ–Ω–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n11. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏...")
    response = requests.get(f"{BASE_URL}/admin/roles/users/{test_user['id']}", headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.text}")
        return
    
    user_roles_after = response.json()
    print(f"   –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {len(user_roles_after)}")
    
    # 12. –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–æ–ª–∏
    print("\n12. –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–æ–ª–∏...")
    deactivate_data = {"is_active": False}
    response = requests.patch(f"{BASE_URL}/admin/roles/{new_role['id']}", json=deactivate_data, headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–æ–ª–∏: {response.text}")
        return
    
    deactivated_role = response.json()
    print(f"   –†–æ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞: {deactivated_role['is_active']}")
    
    # 13. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–ª–µ–π
    print("\n13. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–ª–µ–π...")
    response = requests.get(f"{BASE_URL}/admin/roles/?active_only=true", headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–ª–µ–π: {response.text}")
        return
    
    active_roles = response.json()
    print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–ª–µ–π: {len(active_roles)}")
    
    # 14. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ä–æ–ª–µ–π (–≤–∫–ª—é—á–∞—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ)
    response = requests.get(f"{BASE_URL}/admin/roles/?active_only=false", headers=admin_headers)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π: {response.text}")
        return
    
    all_roles = response.json()
    print(f"   –í—Å–µ–≥–æ —Ä–æ–ª–µ–π: {len(all_roles)}")
    
    print("\n" + "=" * 50)
    print("–¢–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ! üéâ")

def test_role_permissions():
    """–¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏"""
    
    print("\n–¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("1. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user_data = {
        "username": "regularuser",
        "email": "regular@test.com",
        "password": "regular123",
        "role": "customer"
    }
    
    response = requests.post(f"{BASE_URL}/auth/register", json=user_data)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.text}")
        return
    
    regular_user = response.json()
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {regular_user['username']}")
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    login_data = {
        "username": "regularuser",
        "password": "regular123"
    }
    
    response = requests.post(f"{BASE_URL}/auth/token", data=login_data)
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {response.text}")
        return
    
    user_token = response.json()["access_token"]
    user_headers = {"Authorization": f"Bearer {user_token}"}
    print("   –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω")
    
    # 3. –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ä–æ–ª—è–º–∏ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–∞)
    print("\n3. –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ä–æ–ª—è–º–∏...")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π
    response = requests.get(f"{BASE_URL}/admin/roles/", headers=user_headers)
    if response.status_code == 403:
        print("   ‚úÖ –î–æ—Å—Ç—É–ø –∫ /admin/roles/ –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    else:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —Ä–æ–ª—å
    role_data = {"name": "test", "description": "test"}
    response = requests.post(f"{BASE_URL}/admin/roles/", json=role_data, headers=user_headers)
    if response.status_code == 403:
        print("   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π –∑–∞–ø—Ä–µ—â–µ–Ω–æ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    else:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    print("\n" + "=" * 50)
    print("–¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ! üéâ")

if __name__ == "__main__":
    test_role_management()
    test_role_permissions()
