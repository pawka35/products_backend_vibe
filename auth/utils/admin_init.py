import secrets
import string
from sqlalchemy.orm import Session
from auth.models.user_models import User, UserRole
from auth.utils.auth_utils import get_password_hash
from database import get_db

def generate_secure_password(length: int = 16) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä–æ–ª—å"""
    alphabet = string.ascii_letters + string.digits + "!@#$%^&*"
    password = ''.join(secrets.choice(alphabet) for _ in range(length))
    return password

def create_initial_admin(db: Session) -> tuple[str, str]:
    """
    –°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –±–∞–∑–µ
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ (username, password)
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    existing_admin = db.query(User).filter(
        User.role == UserRole.ADMIN
    ).first()
    
    if existing_admin:
        return None, None  # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    password = generate_secure_password(20)
    hashed_password = get_password_hash(password)
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_user = User(
        username="admin",
        email="admin@system.local",
        hashed_password=hashed_password,
        role=UserRole.ADMIN,
        is_active=True
    )
    
    try:
        db.add(admin_user)
        db.commit()
        db.refresh(admin_user)
        
        print("=" * 60)
        print("üîê –°–û–ó–î–ê–ù –ü–ï–†–í–´–ô –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†")
        print("=" * 60)
        print(f"üë§ Username: admin")
        print(f"üîë Password: {password}")
        print(f"üìß Email: admin@system.local")
        print("=" * 60)
        print("‚ö†Ô∏è  –°–û–•–†–ê–ù–ò–¢–ï –≠–¢–û–¢ –ü–ê–†–û–õ–¨! –û–Ω –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω!")
        print("=" * 60)
        
        return "admin", password
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        return None, None

def ensure_admin_exists():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —Å–æ–∑–¥–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
    try:
        db = next(get_db())
        username, password = create_initial_admin(db)
        
        if username and password:
            return True
        else:
            print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        return False
    finally:
        if 'db' in locals():
            db.close()
