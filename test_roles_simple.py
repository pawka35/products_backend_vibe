#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–æ–ª–µ–π
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def test_role_functionality():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–æ–ª–µ–π"""
    
    print("–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–æ–ª–µ–π")
    print("=" * 50)
    
    # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    admin_login = {
        "username": "admin",
        "password": "admin123"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/auth/token", data=admin_login)
        if response.status_code != 200:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∞: {response.text}")
            return False
        
        admin_token = response.json()["access_token"]
        admin_headers = {"Authorization": f"Bearer {admin_token}"}
        print("   ‚úÖ –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω")
        
    except requests.exceptions.ConnectionError:
        print("   ‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω.")
        return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code == 200:
            print("   ‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"   ‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ /auth/me
    try:
        response = requests.get(f"{BASE_URL}/auth/me", headers=admin_headers)
        if response.status_code == 200:
            user_info = response.json()
            print(f"   ‚úÖ /auth/me —Ä–∞–±–æ—Ç–∞–µ—Ç: {user_info['username']} ({user_info['role']})")
        else:
            print(f"   ‚ùå /auth/me: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ /auth/me: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ /users
    try:
        response = requests.get(f"{BASE_URL}/users/", headers=admin_headers)
        if response.status_code == 200:
            users = response.json()
            print(f"   ‚úÖ /users —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        else:
            print(f"   ‚ùå /users: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ /users: {e}")
    
    print("\n" + "=" * 50)
    print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! üéâ")
    print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: python main.py")
    print("2. –í –¥—Ä—É–≥–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python auth/tests/test_roles.py")
    
    return True

if __name__ == "__main__":
    test_role_functionality()
